{"version":3,"sources":["components/appbar/appbar.styles.jsx","components/appbar/appbar.component.jsx","utils/validator.js","components/copyright/copyright.component.jsx","components/material-form/cities.data.js","components/material-form/material-form.syles.jsx","components/material-form/material-form.component.jsx","components/home/home.styles.jsx","components/home/home.component.jsx","components/allforms/allforms.component.jsx","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","MyAppBar","classes","className","AppBar","position","Toolbar","Button","color","component","RouterLink","to","useFormInput","name","validation","formData","values","setFormData","setValues","defaultInvalidAttr","handleError","formValue","dot","pick","useState","value","setValue","isValid","setIsValid","isTouched","setIsTouched","isFocused","setIsFocused","validationRules","handleValidation","useCallback","trimmedValidation","fields","Object","keys","forEach","property","push","rule","options","length","replace","split","fieldName","field","trim","result","validator","validate","useEffect","handleChange","data","target","checked","newValue","type","includes","override","str","handleFocus","handleBlur","invalidAttr","onChange","onFocus","onBlur","useFormCheckboxGroup","hasValue","indexOf","setChecked","isChecked","oldValue","index","filter","v","Copyright","Typography","variant","align","Link","href","Date","getFullYear","CITIES_DATA","label","form","width","marginTop","submit","margin","MaterialForm","history","useHistory","cities","defaultValues","error","mounted","setMounted","formErrors","setFormErrors","errors","findIndex","splice","useInput","useCheckboxGroup","useForm","email","city","date","gender","onSubmit","e","preventDefault","axios","post","then","response","status","console","log","TextField","required","fullWidth","id","autoComplete","autoFocus","select","map","option","MenuItem","key","InputLabelProps","shrink","FormControl","formControl","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","Checkbox","disabled","Box","mt","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","display","flexDirection","alignItems","avatar","secondary","main","Home","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","AllForms","props","handleInputChange","setState","searchfield","state","forms","loading","this","populateFormsData","get","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","toLocaleDateString","filteredForms","toLowerCase","content","paragraph","renderFormsTable","Fragment","Container","maxWidth","gutterBottom","justify","Component","App","path","exact","displayName","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5366a28d.chunk.js","sourcesContent":["// MyAppBar styles\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default useStyles;","// MyAppBar Comonent\r\nimport React from 'react';\r\n\r\n// Material UI Components\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MyAppBar styles\r\nimport useStyles from './appbar.styles';\r\n\r\n\r\nconst MyAppBar = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                    {/* Home button */}\r\n                    <Button color=\"inherit\" component={RouterLink} to={\"/\"}  >Home</Button>\r\n                    {/* All Forms button */}\r\n                    <Button color=\"inherit\" component={RouterLink} to=\"/all-forms\" >All Forms</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyAppBar;","import { useEffect, useState, useCallback } from 'react';\r\nimport validator from 'validator';\r\nimport dot from 'dot-object';\r\n\r\nexport function useFormInput({\r\n    name,\r\n    validation = '',\r\n    values: formData,\r\n    setValues: setFormData,\r\n    defaultInvalidAttr,\r\n    handleError\r\n}) {\r\n    const formValue = dot.pick(name, formData) || '';\r\n\r\n    const [value, setValue] = useState(formValue);\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isTouched, setIsTouched] = useState(false);\r\n    const [isFocused, setIsFocused] = useState(false);\r\n\r\n    const [validationRules] = useState(validation);\r\n\r\n    const handleValidation = useCallback(() => {\r\n        const isValid = validate(value, validationRules);\r\n        setIsValid(isValid);\r\n        handleError(name, isValid);\r\n    }, [setIsValid, validationRules, name, value, handleError]);\r\n\r\n    // watch for external parent data changes\r\n    useEffect(() => {\r\n        if (value !== formValue) {\r\n            setValue(formValue);\r\n            setIsTouched(false);\r\n            setIsFocused(false);\r\n        }\r\n    }, [formValue, value, setValue, setIsFocused, setIsTouched]);\r\n\r\n    // validate on value change\r\n    useEffect(() => {\r\n        handleValidation();\r\n    }, [handleValidation, name]);\r\n\r\n    // rewrite self and parent's value\r\n    const handleChange = useCallback(({ target }) => {\r\n        const { value, checked, type } = target;\r\n        const newValue = type === 'checkbox' ? checked : value;\r\n\r\n        // using dot helps us change nested values\r\n        let data;\r\n        const isNested = name.includes('.');\r\n        if (isNested) {\r\n            dot.override = true;\r\n            data = dot.str(name, newValue, { ...formData });\r\n        } else data = { ...formData, [name]: newValue };\r\n\r\n        setValue(newValue);\r\n        setFormData(data);\r\n    }, [setValue, formData, setFormData, name]);\r\n\r\n    const handleFocus = useCallback(() => {\r\n        setIsTouched(true);\r\n        setIsFocused(true);\r\n        handleValidation();\r\n    }, [setIsTouched, setIsFocused, handleValidation]);\r\n\r\n    const handleBlur = useCallback(() => {\r\n        setIsFocused(false);\r\n    }, [setIsFocused]);\r\n\r\n    const showError = !isValid && isTouched && !isFocused;\r\n    const invalidAttr = showError ? defaultInvalidAttr : null;\r\n\r\n    return {\r\n        value,\r\n        name,\r\n        onChange: handleChange,\r\n        onFocus: handleFocus,\r\n        onBlur: handleBlur,\r\n        ...invalidAttr\r\n    };\r\n}\r\n\r\nexport function useFormCheckboxGroup({\r\n    name,\r\n    value,\r\n    values: formData,\r\n    setValues: setFormData\r\n}) {\r\n    const formValue = dot.pick(name, formData) || [];\r\n    const hasValue = formValue.indexOf(value) > -1;\r\n\r\n    const [checked, setChecked] = useState(hasValue);\r\n\r\n    // watch for external parent data changes\r\n    useEffect(() => {\r\n        const isChecked = formValue.indexOf(value) > -1;\r\n        setChecked(isChecked)\r\n    }, [formValue, value]);\r\n\r\n    // rewrite self and parent's value\r\n    const handleChange = useCallback(({ target }) => {\r\n        const oldValue = dot.pick(name, formData) || [];\r\n        const { checked } = target;\r\n        let newValue;\r\n\r\n        const index = oldValue.indexOf(value);\r\n        if (checked && index < 0) {\r\n            newValue = [...oldValue, value]\r\n        } else if (!checked && index > -1) {\r\n            newValue = oldValue.filter(v => v !== value);\r\n        }\r\n\r\n        // using dot helps us change nested values\r\n        let data;\r\n        const isNested = name.includes('.');\r\n        if (isNested) {\r\n            dot.override = true;\r\n            data = dot.str(name, newValue, { ...formData });\r\n        } else {\r\n            data = { ...formData, [name]: newValue };\r\n        }\r\n\r\n        setChecked(checked);\r\n        setFormData(data);\r\n    }, [value, formData, setFormData, name]);\r\n\r\n    return {\r\n        name,\r\n        checked,\r\n        onChange: handleChange\r\n    };\r\n}\r\n\r\nexport function useForm(defaultValues, invalidAttr = { error: true }) {\r\n    const [values, setValues] = useState(defaultValues);\r\n    const [mounted, setMounted] = useState(false);\r\n    const [formErrors, setFormErrors] = useState([]);\r\n\r\n    const handleError = useCallback((name, isValid) => {\r\n        let errors = formErrors;\r\n        const index = errors.findIndex(error => error === name);\r\n\r\n        if (!isValid) {\r\n            if (index < 0) errors.push(name);\r\n        } else {\r\n            if (index > -1) errors.splice(index, 1);\r\n        }\r\n\r\n        setFormErrors(errors);\r\n    }, [formErrors]);\r\n\r\n    useEffect(() => {\r\n        setMounted(true);\r\n    }, []);\r\n\r\n    const useInput = (name, validation) => useFormInput({\r\n        name,\r\n        validation,\r\n        values,\r\n        setValues,\r\n        defaultInvalidAttr: invalidAttr,\r\n        handleError\r\n    });\r\n\r\n    const useCheckboxGroup = (name, value) => useFormCheckboxGroup({ name, values, setValues, value });\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        useInput,\r\n        useCheckboxGroup,\r\n        errors: formErrors,\r\n        isValid: mounted && !formErrors.length\r\n    };\r\n}\r\n\r\n/**\r\n * Returns either unmet rule, or null\r\n * @param value\r\n * @param validation\r\n * @returns {*}\r\n */\r\nexport function validate(value, validation) {\r\n    const fields = [];\r\n\r\n    let trimmedValidation;\r\n    let validatingFields;\r\n\r\n    switch (typeof validation) {\r\n        case 'object':\r\n            Object.keys(validation).forEach(property => {\r\n                fields.push({\r\n                    rule: property,\r\n                    options: validation[property]\r\n                });\r\n            });\r\n            break;\r\n\r\n        case 'string':\r\n        default:\r\n            if (!validation.length) return true;\r\n            trimmedValidation = validation.replace(/ /g, '');\r\n            validatingFields = trimmedValidation.split(',');\r\n            validatingFields.forEach(fieldName => {\r\n                fields.push({\r\n                    rule: fieldName\r\n                });\r\n            });\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    fields.forEach(field => {\r\n        const { rule, options = null } = field\r\n\r\n        switch (rule.trim()) {\r\n            case 'isRequired':\r\n                if (!value) isValid = false\r\n                break\r\n            default:\r\n                if (isValid) {\r\n                    if (options !== null) {\r\n                        let result\r\n                        switch (options) {\r\n                            case true:\r\n                                result = validator[rule](value);\r\n                                break\r\n                            case false:\r\n                                result = !validator[rule](value);\r\n                                break\r\n                            default:\r\n                                result = validator[rule](value, options);\r\n                        }\r\n                        isValid = result\r\n                    } else isValid = validator[rule](value);\r\n                    break\r\n                }\r\n        }\r\n    });\r\n\r\n    return isValid;\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://github.com/astricus/FormApp\">\r\n                FormApp\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright;","// Cities used in dropdown field\r\nconst CITIES_DATA = [\r\n    {\r\n        value: 'St.Petersburg',\r\n        label: 'St.Petersburg'\r\n    },\r\n    {\r\n        value: 'Moscow',\r\n        label: 'Moscow'\r\n    },\r\n    {\r\n        value: 'Sochi',\r\n        label: 'Sochi'\r\n    },\r\n];\r\n\r\nexport default CITIES_DATA;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// Material UI Components\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Radio, RadioGroup } from '@material-ui/core';\r\n\r\n// useForm hook is used to validate and get form data\r\nimport { useForm } from '../../utils/validator';\r\n\r\n// Copyright\r\nimport Copyright from '../copyright/copyright.component';\r\n\r\n// axios is used to post data from submitted form\r\nimport axios from 'axios';\r\n\r\n// Cities data for dropdown\r\nimport CITIES_DATA from './cities.data';\r\n\r\n// Form Styles\r\nimport useStyles from './material-form.syles';\r\n\r\n// Main form function\r\nconst MaterialForm = () => {\r\n\r\n    // When form is successfully submitted history is used to direct to /all-forms\r\n    const history = useHistory();\r\n\r\n    // cities for dropdown field\r\n    const cities = CITIES_DATA;\r\n\r\n    // styles\r\n    const classes = useStyles();\r\n\r\n    const formData = {\r\n        name: '',\r\n        email: '',\r\n        city: '',\r\n        date: '',\r\n        gender: ''\r\n    };\r\n\r\n    const { values, useInput, isValid } = useForm(formData);\r\n\r\n    // form submit function. If success - push to /all-forms\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        axios.post(\"api/Forms/AddForm\", values)\r\n            .then((response) => {\r\n            response.status === 200 ? history.push('/all-forms') : console.log('Form was not submitted!');\r\n         });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={classes.form}>\r\n\r\n            {/* Name text field */}\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                autoFocus\r\n                {...useInput('name', 'isRequired')}\r\n            />\r\n\r\n            {/* E-mail text field */}\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"E-mail address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                {...useInput('email', 'isRequired, isEmail')}\r\n            />\r\n\r\n            {/* City dropdown field */}\r\n            <TextField\r\n                id=\"city\"\r\n                margin=\"normal\"\r\n                required\r\n                select\r\n                label=\"Select city\"\r\n                fullWidth\r\n                name=\"city\"\r\n                variant=\"outlined\"\r\n                {...useInput('city', 'isRequired')}\r\n            >\r\n                {cities.map(option => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n\r\n            {/* Birthday date field */}\r\n            <TextField\r\n                id=\"date\"\r\n                name=\"date\"\r\n                required\r\n                margin=\"normal\"\r\n                label=\"Birthday\"\r\n                type=\"date\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                {...useInput('date', 'isRequired')}\r\n            />\r\n\r\n            {/* Gender radio group field */}\r\n            <FormControl\r\n                component=\"fieldset\" fullWidth\r\n                margin=\"normal\"\r\n                className={classes.formControl}\r\n            >\r\n                <FormLabel component=\"legend\" required >Gender</FormLabel>\r\n                <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender\"\r\n                    {...useInput('gender', 'isRequired')}\r\n                >\r\n                    <FormControlLabel value=\"Male\" control={<Radio color=\"primary\" />} label=\"Male\" />\r\n                    <FormControlLabel value=\"Female\" control={<Radio color=\"primary\" />} label=\"Female\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n\r\n            {/* Agreement checkbox field */}\r\n            <FormControlLabel\r\n                margin=\"normal\"\r\n                control={\r\n                    <Checkbox\r\n                        color=\"primary\" \r\n                        name=\"formControl\" \r\n                        {...useInput('formControl', 'isRequired')} \r\n                    />\r\n                }\r\n                label=\"I agree to submit the form\"\r\n            />\r\n\r\n            {/* Submit button, fires handleSubmit */}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={!isValid}\r\n            >\r\n                Submit form\r\n            </Button>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </form >\r\n    )\r\n};\r\n\r\nexport default MaterialForm;","// Home Page Component styles\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/collection/1976082)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    }\r\n}));\r\n\r\nexport default useStyles;","// Home Page Component. Modified version of https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-in-side\r\nimport React from 'react';\r\n\r\n// Material UI Components\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MaterialForm from '../material-form/material-form.component';\r\n\r\n// Styles\r\nimport useStyles from './home.styles';\r\n\r\n// Main function\r\nconst Home = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n\r\n            {/* Image from unsplash.com */}\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n\r\n            {/* Form */}\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Submit the form\r\n                    </Typography>\r\n                    {/* Form Component */}\r\n                    <MaterialForm />\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\n// Material UI Components\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// Axios is used to get data from storage\r\nimport axios from 'axios';\r\n\r\n\r\nclass AllForms extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // state is used to store forms data, loading flag and searchfield string\r\n        this.state = {\r\n            forms: [],\r\n            loading: true,\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    // Populating data from storage when component mounted\r\n    componentDidMount() {\r\n        this.populateFormsData();\r\n    }\r\n\r\n    // Populate method\r\n    populateFormsData() {\r\n        axios.get(\"api/Forms/GetForms\").then(result => {\r\n            const response = result.data;\r\n            this.setState({ forms: response, loading: false });\r\n        })\r\n    }\r\n\r\n    // Render Forms Table method. Forms data is displayed in a Material UI Table Component\r\n    renderFormsTable(forms) {\r\n        return (\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"right\">E-mail</TableCell>\r\n                            <TableCell align=\"right\">City</TableCell>\r\n                            <TableCell align=\"right\">Date</TableCell>\r\n                            <TableCell align=\"right\">Gender</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {forms.map(form => (\r\n                            <TableRow key={form.name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {form.name}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{form.email}</TableCell>\r\n                                <TableCell align=\"right\">{form.city}</TableCell>\r\n                                <TableCell align=\"right\">{new Date(form.date).toLocaleDateString('ru-RU')}</TableCell>\r\n                                <TableCell align=\"right\">{form.gender}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n        )\r\n    }\r\n    // Watch on searchfield change and modify state \r\n    handleInputChange = e => {\r\n        this.setState({ searchfield: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { forms, searchfield } = this.state;\r\n\r\n        // filteredForms is an array with forms which filtered by name when we type in SearchField.\r\n        // this array is used to display forms\r\n        const filteredForms = forms.filter(form => form.name.toLowerCase().includes(searchfield.toLowerCase()))\r\n        let content = this.state.loading ? (\r\n            <Typography variant=\"overline\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                Loading...\r\n            </Typography>\r\n        ) : (\r\n                this.renderFormsTable(filteredForms)\r\n            )\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <div>\r\n                    <Container maxWidth=\"lg\">\r\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                            All Forms\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                            Here you can see and filter all submitted forms\r\n                        </Typography>\r\n                        <div>\r\n                            <Grid container spacing={2} justify=\"center\">\r\n                                <Grid item>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    id=\"search\"\r\n                                    label=\"search\"\r\n                                    name=\"search\"\r\n                                    onChange={this.handleInputChange}\r\n                                    autoFocus\r\n                                />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        <div>\r\n                            {content}\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllForms;","import React, { Component } from 'react';\nimport { Route } from 'react-router';\n\n// MyAppBar - navigation menu for our App\nimport MyAppBar from './components/appbar/appbar.component';\n\n// Home - home page component. Here we will submit the form and send data to server\nimport Home from './components/home/home.component';\n\n// AllForms - All Forms page component. Here we can will display all form's data from server and filter\nimport AllForms from './components/allforms/allforms.component';\n\n// Main App class\nclass App extends Component {\n    static displayName = App.name;\n\n    render() {\n        return (\n            <div>\n                {/* Navigation menu for our app */}\n                <MyAppBar />\n                {/* Routes to Home and AllForms components */}\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/all-forms\" component={AllForms} />\n            </div>\n        );\n    }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\n// Rendering our App\nReactDOM.render(\n    <BrowserRouter basename={baseUrl}>\n        <App />\n    </BrowserRouter>,\n    rootElement);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}